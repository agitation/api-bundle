services:
    agit.api.endpoint:
        class: Agit\ApiBundle\Service\EndpointService
        arguments: [ "@agit.common.cache.persistent", "@agit.api.response", "@agit.api.persistence", "@doctrine.orm.entity_manager", "@agit.api.factory", "@?agit.logger", "@?agit.user" ]

    agit.api.objectmeta:
        class: Agit\ApiBundle\Service\ObjectMetaService
        arguments: [ "@agit.common.cache.persistent", "@agit.validation", "@agit.api.factory" ]

    agit.api.request:
        class: Agit\ApiBundle\Service\RequestService
        arguments: [ "@agit.api.objectmeta" ]

    agit.api.response:
        class: Agit\ApiBundle\Service\ResponseService
        arguments: [ "@agit.api.objectmeta", "@doctrine.orm.entity_manager" ]

    agit.api.formatter:
        class: Agit\ApiBundle\Service\FormatterService
        arguments: [ "@agit.common.cache.persistent", "%kernel.debug%" ]

    agit.api.persistence:
        class: Agit\ApiBundle\Service\PersistenceService
        arguments: [ "@doctrine.orm.entity_manager", "@validator" ]

    agit.api.factory:
        class: Agit\ApiBundle\Service\Factory
        arguments: [ "@service_container" ]

    # processors

    agit.api.controller_processor:
        class: Agit\ApiBundle\Service\ControllerProcessor
        arguments: [ "@kernel", "@agit.common.classcollector", "@annotation_reader", "@agit.common.cache.persistent", "@doctrine.orm.entity_manager" ]
        tags: [{ name: kernel.cache_warmer }]

    agit.api.object_processor:
        class: Agit\ApiBundle\Service\ObjectProcessor
        arguments: [ "@kernel", "@agit.common.classcollector", "@annotation_reader", "@agit.common.cache.persistent" ]
        tags: [{ name: kernel.cache_warmer }]

    # formatters

    agit.api.json_formatter:
        class: Agit\ApiBundle\Service\JsonFormatter
        arguments: [ "@agit.api.objectmeta", "%kernel.debug%" ]
        tags: [{ name: agit.api.formatter, extension: json }]

    agit.api.jsonp_formatter:
        class: Agit\ApiBundle\Service\JsonpFormatter
        arguments: [ "@agit.api.objectmeta", "%kernel.debug%" ]
        tags: [{ name: agit.api.formatter, extension: jsonp }]

    # various other services

    agit.api.seed.logentry_category:
        private: true
        class: Agit\ApiBundle\Service\LogentryCategorySeed
        tags: [{ name: kernel.event_listener, event: agit.seed, method: registerSeed }]

    agit.api.csrf:
        class: Agit\ApiBundle\Service\CsrfTokenService
        arguments: [ "@session" ]

    agit.api.twig:
        class: Agit\ApiBundle\Service\TwigExtension
        arguments:  [ "@agit.common.url", "@agit.api.csrf" ]
        tags: [{ name: twig.extension }]

    # registration listener for translation catalogs
    agit.api.bundle.translations:
        class: Agit\ApiBundle\EventListener\TranslationsListener
        arguments: [ "@agit.api.objectmeta", "@kernel" ]
        tags: [{ name: kernel.event_listener, event: agit.intl.bundle.translations, method: onRegistration }]
